import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "edrhcontroller.h"
        name: "EDRHController"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["EDRH/EDRHController 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "commanderName"
            type: "QString"
            read: "commanderName"
            write: "setCommanderName"
            notify: "commanderNameChanged"
            index: 0
        }
        Property {
            name: "currentSystem"
            type: "QString"
            read: "currentSystem"
            write: "setCurrentSystem"
            notify: "currentSystemChanged"
            index: 1
        }
        Property {
            name: "appVersion"
            type: "QString"
            read: "appVersion"
            index: 2
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "isAdmin"
            type: "bool"
            read: "isAdmin"
            notify: "isAdminChanged"
            index: 3
            isReadonly: true
        }
        Property {
            name: "nearestSystems"
            type: "QVariantList"
            read: "nearestSystems"
            notify: "nearestSystemsChanged"
            index: 4
            isReadonly: true
        }
        Property {
            name: "unclaimedSystems"
            type: "QVariantList"
            read: "unclaimedSystems"
            notify: "unclaimedSystemsChanged"
            index: 5
            isReadonly: true
        }
        Property {
            name: "selectedCategory"
            type: "QString"
            read: "selectedCategory"
            write: "setSelectedCategory"
            notify: "selectedCategoryChanged"
            index: 6
        }
        Property {
            name: "availableCategories"
            type: "QVariantList"
            read: "availableCategories"
            notify: "availableCategoriesChanged"
            index: 7
            isReadonly: true
        }
        Property {
            name: "jumpCount"
            type: "int"
            read: "jumpCount"
            notify: "jumpCountChanged"
            index: 8
            isReadonly: true
        }
        Property {
            name: "sessionTime"
            type: "QString"
            read: "sessionTime"
            notify: "sessionTimeChanged"
            index: 9
            isReadonly: true
        }
        Property {
            name: "mapWindowActive"
            type: "bool"
            read: "mapWindowActive"
            notify: "mapWindowActiveChanged"
            index: 10
            isReadonly: true
        }
        Property {
            name: "nearestDistanceText"
            type: "QString"
            read: "nearestDistanceText"
            notify: "nearestDistanceTextChanged"
            index: 11
            isReadonly: true
        }
        Property {
            name: "nearestCategoryText"
            type: "QString"
            read: "nearestCategoryText"
            notify: "nearestCategoryTextChanged"
            index: 12
            isReadonly: true
        }
        Property {
            name: "unclaimedIndex"
            type: "int"
            read: "unclaimedIndex"
            notify: "unclaimedIndexChanged"
            index: 13
            isReadonly: true
        }
        Property {
            name: "unclaimedTotal"
            type: "int"
            read: "unclaimedTotal"
            notify: "unclaimedTotalChanged"
            index: 14
            isReadonly: true
        }
        Property {
            name: "currentUnclaimedSystemName"
            type: "QString"
            read: "currentUnclaimedSystemName"
            notify: "currentUnclaimedSystemNameChanged"
            index: 15
            isReadonly: true
        }
        Property {
            name: "suppressMainAppNotifications"
            type: "bool"
            read: "suppressMainAppNotifications"
            write: "setSuppressMainAppNotifications"
            notify: "suppressMainAppNotificationsChanged"
            index: 16
        }
        Property {
            name: "supabaseClient"
            type: "SupabaseClient"
            isPointer: true
            read: "supabaseClient"
            index: 17
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "claimManager"
            type: "ClaimManager"
            isPointer: true
            read: "claimManager"
            index: 18
            isReadonly: true
            isPropertyConstant: true
        }
        Property {
            name: "galaxyMapSystems"
            type: "QVariantList"
            read: "galaxyMapSystems"
            notify: "galaxyMapSystemsChanged"
            index: 19
            isReadonly: true
        }
        Property {
            name: "commanderPosition"
            type: "QVariantMap"
            read: "commanderPosition"
            notify: "commanderPositionChanged"
            index: 20
            isReadonly: true
        }
        Property {
            name: "visibleSystemsCount"
            type: "int"
            read: "visibleSystemsCount"
            notify: "visibleSystemsCountChanged"
            index: 21
            isReadonly: true
        }
        Property {
            name: "galaxyMapLoading"
            type: "bool"
            read: "galaxyMapLoading"
            notify: "galaxyMapLoadingChanged"
            index: 22
            isReadonly: true
        }
        Property {
            name: "allCommanderLocations"
            type: "QVariantList"
            read: "allCommanderLocations"
            notify: "allCommanderLocationsChanged"
            index: 23
            isReadonly: true
        }
        Property {
            name: "commanderX"
            type: "double"
            read: "commanderX"
            notify: "commanderPositionChanged"
            index: 24
            isReadonly: true
        }
        Property {
            name: "commanderZ"
            type: "double"
            read: "commanderZ"
            notify: "commanderPositionChanged"
            index: 25
            isReadonly: true
        }
        Signal { name: "commanderNameChanged" }
        Signal { name: "currentSystemChanged" }
        Signal { name: "isAdminChanged" }
        Signal { name: "nearestSystemsChanged" }
        Signal { name: "unclaimedSystemsChanged" }
        Signal { name: "selectedCategoryChanged" }
        Signal { name: "availableCategoriesChanged" }
        Signal { name: "jumpCountChanged" }
        Signal { name: "sessionTimeChanged" }
        Signal { name: "mapWindowActiveChanged" }
        Signal { name: "nearestDistanceTextChanged" }
        Signal { name: "nearestCategoryTextChanged" }
        Signal { name: "unclaimedIndexChanged" }
        Signal { name: "unclaimedTotalChanged" }
        Signal { name: "currentUnclaimedSystemNameChanged" }
        Signal { name: "suppressMainAppNotificationsChanged" }
        Signal { name: "galaxyMapSystemsChanged" }
        Signal { name: "commanderPositionChanged" }
        Signal { name: "visibleSystemsCountChanged" }
        Signal { name: "galaxyMapLoadingChanged" }
        Signal { name: "allCommanderLocationsChanged" }
        Signal {
            name: "showMessage"
            Parameter { name: "title"; type: "QString" }
            Parameter { name: "message"; type: "QString" }
        }
        Signal {
            name: "showError"
            Parameter { name: "title"; type: "QString" }
            Parameter { name: "message"; type: "QString" }
        }
        Signal {
            name: "navigationRequested"
            Parameter { name: "systemName"; type: "QString" }
        }
        Signal { name: "systemUpdated" }
        Signal {
            name: "showSystemPopup"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "systemData"; type: "QVariantMap" }
        }
        Signal { name: "openGalaxyMapWindow" }
        Signal {
            name: "systemInformationReceived"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "systemInfo"; type: "QVariantMap" }
        }
        Signal {
            name: "requestFilterChange"
            Parameter { name: "systemTypeFilter"; type: "QString" }
        }
        Signal {
            name: "edsmSystemDataReceived"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "systemData"; type: "QVariantMap" }
        }
        Signal {
            name: "systemClaimed"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "systemUnclaimed"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "systemImageSet"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "imageUrl"; type: "QString" }
            Parameter { name: "success"; type: "bool" }
        }
        Signal {
            name: "systemImagesUpdated"
            Parameter { name: "systemNames"; type: "QStringList" }
        }
        Signal {
            name: "databaseDownloadProgress"
            Parameter { name: "progress"; type: "double" }
            Parameter { name: "status"; type: "QString" }
        }
        Signal { name: "databaseDownloadComplete" }
        Signal {
            name: "requestImagePicker"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method { name: "refreshData" }
        Method { name: "viewCurrentSystem" }
        Method { name: "createPOI" }
        Method { name: "openMap" }
        Method { name: "openGalaxyMap" }
        Method {
            name: "claimSystem"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "viewSystem"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method { name: "viewYourSystems" }
        Method {
            name: "copyToClipboard"
            Parameter { name: "text"; type: "QString" }
        }
        Method { name: "showAdminPanel" }
        Method { name: "prevUnclaimed" }
        Method { name: "nextUnclaimed" }
        Method { name: "viewClosest" }
        Method { name: "claimClosest" }
        Method {
            name: "markSystemVisited"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "markSystemDone"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "unclaimSystem"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "getSystemInformation"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "category"; type: "QString" }
        }
        Method {
            name: "getSystemInformation"
            isCloned: true
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "getSystemInformationRobust"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "isSystemClaimable"
            type: "bool"
            isMethodConstant: true
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "getSystemFromEDSM"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "getEDSMSystemData"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "markSystemAsPOI"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "poiType"; type: "QString" }
        }
        Method {
            name: "removePOIStatus"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method { name: "verifyJournal" }
        Method { name: "revokeJournalVerification" }
        Method {
            name: "saveSystemDescription"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "description"; type: "QString" }
        }
        Method {
            name: "openImagePicker"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "handleImageSelected"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "fileName"; type: "QString" }
        }
        Method {
            name: "uploadImageToImgbb"
            Parameter { name: "filePath"; type: "QString" }
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "checkSystemVisitedInJournal"
            type: "bool"
            isMethodConstant: true
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "saveSystemInformation"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "information"; type: "QVariantMap" }
        }
        Method {
            name: "updateSystemStatus"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "visited"; type: "bool" }
            Parameter { name: "done"; type: "bool" }
        }
        Method {
            name: "updateSystemVisited"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "visited"; type: "bool" }
        }
        Method {
            name: "updateSystemDone"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "done"; type: "bool" }
        }
        Method {
            name: "markSystemAsEdited"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "updateSystemImages"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "primaryImage"; type: "QString" }
            Parameter { name: "primaryTitle"; type: "QString" }
            Parameter { name: "additionalImages"; type: "QString" }
            Parameter { name: "additionalTitles"; type: "QString" }
        }
        Method {
            name: "getPrimaryImageForSystem"
            type: "QString"
            isMethodConstant: true
            Parameter { name: "systemName"; type: "QString" }
        }
        Method { name: "loadGalaxyMapData" }
        Method {
            name: "updateGalaxyMapFilters"
            Parameter { name: "filters"; type: "QVariantMap" }
        }
        Method {
            name: "focusOnSystem"
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "getSystemsInRegion"
            type: "QVariantMap"
            Parameter { name: "minX"; type: "double" }
            Parameter { name: "maxX"; type: "double" }
            Parameter { name: "minZ"; type: "double" }
            Parameter { name: "maxZ"; type: "double" }
        }
        Method {
            name: "updateCategoryFilter"
            Parameter { name: "categories"; type: "QStringList" }
        }
        Method { name: "resetCategoryFilter" }
        Method { name: "startJournalMonitoring" }
        Method { name: "stopJournalMonitoring" }
        Method { name: "selectJournalFolder" }
        Method { name: "startFullDatabaseDownload" }
        Method { name: "updateSessionTime" }
        Method { name: "processJournalUpdate" }
        Method {
            name: "handleSystemsReceived"
            Parameter { name: "systems"; type: "QJsonArray" }
        }
        Method {
            name: "handleNearestSystemsReceived"
            Parameter { name: "systems"; type: "QJsonArray" }
        }
        Method {
            name: "handleTakenSystemsReceived"
            Parameter { name: "taken"; type: "QJsonArray" }
        }
        Method {
            name: "handleCategoriesReceived"
            Parameter { name: "categories"; type: "QJsonArray" }
        }
        Method {
            name: "handlePOISReceived"
            Parameter { name: "pois"; type: "QJsonArray" }
        }
        Method {
            name: "handlePOIDataForMerge"
            Parameter { name: "poiData"; type: "QJsonArray" }
        }
        Method {
            name: "handleSystemInformationReceived"
            Parameter { name: "systemName"; type: "QString" }
            Parameter { name: "systemInfo"; type: "QJsonObject" }
        }
        Method {
            name: "handleAllCommanderLocationsReceived"
            Parameter { name: "locations"; type: "QJsonArray" }
        }
        Method {
            name: "handleBulkSystemImagesLoaded"
            Parameter { name: "systemImages"; type: "QJsonObject" }
        }
        Method {
            name: "handleSupabaseError"
            Parameter { name: "error"; type: "QString" }
        }
    }
    Component {
        file: "imageloader.h"
        name: "ImageLoader"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["EDRH/ImageLoader 1.0"]
        exportMetaObjectRevisions: [256]
        Signal {
            name: "imageLoaded"
            Parameter { name: "url"; type: "QString" }
            Parameter { name: "imagePath"; type: "QString" }
        }
        Signal {
            name: "imageLoadFailed"
            Parameter { name: "url"; type: "QString" }
            Parameter { name: "error"; type: "QString" }
        }
        Signal {
            name: "presetImageLoaded"
            Parameter { name: "category"; type: "QString" }
            Parameter { name: "imagePath"; type: "QString" }
        }
        Signal {
            name: "presetImagesFromDatabaseLoaded"
            Parameter { name: "presetImages"; type: "QJsonArray" }
        }
        Signal { name: "presetImagesReady" }
        Signal { name: "cacheCleared" }
        Method {
            name: "handlePresetImagesReceived"
            Parameter { name: "presetImages"; type: "QJsonArray" }
        }
        Method { name: "handleImageDownloaded" }
        Method {
            name: "handleNetworkError"
            Parameter { name: "error"; type: "QNetworkReply::NetworkError" }
        }
        Method {
            name: "loadImage"
            Parameter { name: "url"; type: "QString" }
            Parameter { name: "systemName"; type: "QString" }
        }
        Method {
            name: "loadImage"
            isCloned: true
            Parameter { name: "url"; type: "QString" }
        }
        Method {
            name: "loadPresetImage"
            Parameter { name: "category"; type: "QString" }
        }
        Method {
            name: "loadPresetImagesFromDatabase"
            Parameter { name: "includeRichard"; type: "bool" }
        }
        Method { name: "loadPresetImagesFromDatabase"; isCloned: true }
        Method {
            name: "getCachedImagePath"
            type: "QString"
            Parameter { name: "url"; type: "QString" }
        }
        Method {
            name: "getCachedImageFileUrl"
            type: "QString"
            Parameter { name: "url"; type: "QString" }
        }
        Method {
            name: "hasPresetImage"
            type: "bool"
            Parameter { name: "category"; type: "QString" }
        }
        Method {
            name: "getPresetImageUrl"
            type: "QString"
            Parameter { name: "category"; type: "QString" }
        }
        Method {
            name: "getPresetImageFileUrl"
            type: "QString"
            Parameter { name: "category"; type: "QString" }
        }
        Method { name: "clearCache" }
        Method { name: "preloadCommonImages" }
    }
}
